[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']
hook_post_source = '''
let g:neosnippet#snippets_directory='~/.config/nvim/snip'

if has('conceal')
    set conceallevel=2 concealcursor=i
endif
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
'''
hook_post_source = '''
let g:deoplete#omni_patterns = {}
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_i = 1
on_ft = 'python'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'

[[plugins]]
repo = 'kannokanno/previm'
on_ft = 'markdown'
depends = ['open-browser.vim']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'
hook_source = '''
au BufRead,BufNewFile *.toml set filetype=toml
'''

[[plugins]]
repo = 'lepture/vim-jinja'
on_ft = 'jinja'
hook_source = '''
au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm set ft=jinja
'''

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = 'javascript'

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = 'javascript'
on_i = 1

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'
on_i = 1
